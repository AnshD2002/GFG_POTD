class Solution
{
    //Function to find the maximum profit and the number of jobs done.
    int[] JobScheduling(Job arr[], int n)
    {
        // Your code here
        Arrays.sort(arr,(a,b)->b.profit-a.profit);
        int max  = Integer.MIN_VALUE;
           for(int  i =0;i<n;i++){
               if(arr[i].deadline>max){
                   max = arr[i].deadline;
               }
           }
           int dp[] = new int[max+1];
           Arrays.fill(dp,-1);
    int jobs =0;
    int profit = 0;
    for(int i =0;i<n;i++){
        for(int j =arr[i].deadline;j>0;j--){
            if(dp[j]==-1){
             dp[j] = i;
             jobs++;
             profit += arr[i].profit;
             break;
     }
    }
    }
return new int[]{jobs,profit};
}
}

/*
class Job {
    int id, profit, deadline;
    Job(int x, int y, int z){
        this.id = x;
        this.deadline = y;
        this.profit = z; 
    }
}
*/
